######################
# TensTorrent
######################
export USER_DEV=/proj_sw/user_dev/$USER/
export ALL_BAZEL=1
export VCD_NOFPU=1 # disable vcd dump for FPU
export FAST_VERSIM=3 # optimized for runtime
export DEVICE_RUNNER=Silicon
export SKIP_BBE_UPDATE=1

if [[ -v IRD_ARCH_NAME ]]; then
    export ARCH_NAME="$IRD_ARCH_NAME"
else
    export ARCH_NAME=undefined
    ssh_hostname=$(hostname)
    if [[ $ssh_hostname =~ -gs- ]]; then
        config-gs
    elif [[ $ssh_hostname =~ -wh- ]]; then
        config-wh
    fi
    echo "ARCH_NAME=$ARCH_NAME based on $ssh_hostname"
fi
export BACKEND_ARCH_NAME="$ARCH_NAME"

alias -- ird='python3 /proj_sw//tools/interactive-run-docker/interactive-run-docker.py'
alias -- config-gs='export ARCH_NAME=grayskull; export BACKEND_ARCH_NAME=$ARCH_NAME'
alias -- config-wh='export ARCH_NAME=wormhole_b0; export BACKEND_ARCH_NAME=$ARCH_NAME'
alias -- config-bh='export ARCH_NAME=blackhole; export BACKEND_ARCH_NAME=$ARCH_NAME'

alias -- dock='docker exec -it --user tzhou special-tzhou zsh'
alias -- deck='sudo service docker start && sudo chmod 666 /var/run/docker.sock'

dbgon() {
    export CONFIG=debug
    export BACKEND_CONFIG="$CONFIG"
    export PYBUDA_OP_PERF=1
    export TT_BACKEND_PROFILER=1
}

dbgoff() {
    export CONFIG=release
    export BACKEND_CONFIG="$CONFIG"
    unset PYBUDA_OP_PERF
    unset TT_BACKEND_PROFILER
}

lc() {
    sudo apt-get install -y locales
    sudo localedef -v -c -i en_US -f UTF-8 en_US.UTF-8
}

rst() {
    reset_command=$(fd tensix-reset)
    if [[ -n "$reset_command" ]]; then
        "$reset_command" "$@"
    fi
}

tinytensor() {
    export ROOT=~/proj_sw/tinytensor
    export PYTHONPATH=$ROOT:$ROOT/src:$ROOT/tests:$ROOT/bbe/build/obj/py_api:$ROOT/bbe/py_api/tests:$PYTHONPATH
    export BUDA_HOME=$ROOT/bbe
    export CONFIG=release
    lc; cd $ROOT
}

if [ -f $USER_DEV/ird/interactive-run-docker.py ]; then
    alias -- ird='python3 $USER_DEV/ird/interactive-run-docker.py'
fi

dbgoff
