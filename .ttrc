######################
# TensTorrent
######################
export USER_DEV=/proj_sw/user_dev/$USER/
export LOCAL_DEV=/localdev/
export ROOT="$USER_DEV"
export ALL_BAZEL=1
export VCD_NOFPU=1 # disable vcd dump for FPU
export FAST_VERSIM=3 # optimized for runtime
export DEVICE_RUNNER=Silicon
export SKIP_BBE_UPDATE=1
export ARCH_NAME=grayskull

alias -- config-gs='export ARCH_NAME=grayskull'
alias -- config-wh='export ARCH_NAME=wormhole_b0'
alias -- config-bh='export ARCH_NAME=blackhole'
alias -- dock='docker exec -it --user tzhou special-tzhou zsh'
alias -- deck='sudo service docker start && sudo chmod 666 /var/run/docker.sock'

dbgon() {
    export CONFIG=debug
    export BACKEND_CONFIG="$CONFIG"
    export LOGGER_LEVEL=Debug
    export PYBUDA_OP_PERF=1
    export PYBUDA_BUILD_DIR=tt_build
    export TT_BACKEND_PROFILER=1
}
dbgoff() {
    export CONFIG=release
    export BACKEND_CONFIG="$CONFIG"
    unset LOGGER_LEVEL
    unset PYBUDA_OP_PERF
    unset PYBUDA_BUILD_DIR
    unset TT_BACKEND_PROFILER
}

rst() {
    if [[ "$ARCH_NAME" == "grayskull" ]]; then
        rst_cmd=$(find . -type f -name "tensix-reset" -executable)
        "$rst_cmd" "$@"
    else
        /mnt/motor/syseng/bin/tt-smi/wh/stable -wr "$@"
    fi
}

reportify() {
    cd ~/reportify
    conda activate reportify
    ./run_for_testify.sh 6600
}

[[ -v IRD_ARCH_NAME ]] && export ARCH_NAME="$IRD_ARCH_NAME"

if [[ $(pwd) =~ $USER_DEV || $(pwd) =~ $LOCAL_DEV ]]; then
    dbgon && eval "`ondir /`"
fi
